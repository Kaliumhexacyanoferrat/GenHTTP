name: CI

on: 
  push:
  pull_request:
    types: [opened]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      DOTNET_ROLL_FORWARD: Major

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Download .NET SDK
      run: |
        wget -nv https://download.visualstudio.microsoft.com/download/pr/202e929a-e985-4eab-a78a-d7159fc204e4/0c85219d441cd3bbffd4fb65b7e36fe5/dotnet-sdk-9.0.100-rc.2.24474.11-linux-x64.tar.gz
        mkdir -p $HOME/dotnet
        tar -zxf dotnet-sdk-9.0.100-rc.2.24474.11-linux-x64.tar.gz -C $HOME/dotnet
    - name: Setup .NET PATH
      run: |
        echo "$HOME/dotnet" >> $GITHUB_PATH        
    - name: Restore tools
      run: dotnet tool restore
    - name: Begin scan
      if: env.SONAR_TOKEN != null && env.SONAR_TOKEN != ''
      run: dotnet sonarscanner begin /k:"GenHTTP" /d:sonar.token="$SONAR_TOKEN" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.exclusions="**/bin/**/*,**/obj/**/*,**/Playground/**/*,**/*.css,**/*.js,**/*.html" /o:"kaliumhexacyanoferrat" /k:"GenHTTP" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.branch.name="${GITHUB_REF##*/}" /d:sonar.dotnet.excludeTestProjects=true
    - name: Build project
      run: dotnet build GenHTTP.sln -c Release
    - name: Test project
      run: dotnet test -d -c Release --no-build GenHTTP.sln --collect:"XPlat Code Coverage" --settings GenHTTP.runsettings
    - name: End scan
      if: env.SONAR_TOKEN != null && env.SONAR_TOKEN != ''
      run: dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
